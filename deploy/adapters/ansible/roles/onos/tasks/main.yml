---
- include_vars: "{{ ansible_os_family }}.yml"

- name: upload onos driver package
  unarchive: src=networking-onos.tar dest=/opt/

- name: install onos driver
  command: su -s /bin/sh -c "/opt/networking-onos/install_driver.sh"

- name: install onos required packages
  action: "{{ ansible_pkg_mgr }}  name={{ item }} state=present"
  with_items: packages
  
- name: get image http server
  shell: awk -F'=' '/compass_server/ {print $2}' /etc/compass.conf
  register: http_server

- name: download oracle-jdk8 package file
  get_url: url="http://{{ http_server.stdout_lines[0] }}/packages/onos/{{ jdk8_pkg_name }}"  dest=/opt/{{ jdk8_pkg_name }}
  
- name: upload install_jdk8 scripts
  unarchive: src=install_jdk8.tar dest=/opt/
  
- name: install install_jdk8 package
  command: su -s /bin/sh -c "/opt/install_jdk8/install_jdk8.sh" 
  
- name: create JAVA_HOME environment variable
  shell: >
    export J2SDKDIR=/usr/lib/jvm/java-8-oracle;
    export J2REDIR=/usr/lib/jvm/java-8-oracle/jre;
    export PATH=$PATH:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin;
    export JAVA_HOME=/usr/lib/jvm/java-8-oracle;
    export DERBY_HOME=/usr/lib/jvm/java-8-oracle/db;

- name: download onos package
  get_url: url="http://{{ http_server.stdout_lines[0] }}/packages/onos/{{ onos_pkg_name }}"  dest=/opt/{{ onos_pkg_name }}

# TODO: unarchive doesn't support strip-component at the moment
# TODO: switch to use untar after support is added.
- name: extract onos package
  command: su -s /bin/sh -c "tar xzf /opt/{{ onos_pkg_name }} -C /opt/"
  notify:
    - restart onos service


##########################################################################################################
################################    ONOS connect with OpenStack   ################################
##########################################################################################################
- name: Turn off neutron-server on control node
  service: name=neutron-server state=stopped

- name: shut down and disable Neutron's agent services
  service: name=neutron-plugin-openvswitch-agent state=stopped

- name: Stop the Open vSwitch service and clear existing OVSDB
  shell: >
    service openvswitch-switch stop ;
    rm -rf /var/log/openvswitch/* ;
    rm -rf /etc/openvswitch/conf.db ;
    service openvswitch-switch start ;

- name: Set ONOS as the manager
  command: su -s /bin/sh -c "ovs-vsctl set-manager tcp:127.0.0.1:6640;"

- name: Configure Neutron1
  shell: >
    crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers onos;
    crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types vxlan;

- name: Create ML2 Configuration File
  template:
    src: ml2_conf.sh
    dest: "/opt/ml2_conf.sh"
    mode: 0777

- name: Configure Neutron2
  command: su -s /bin/sh -c "/opt/ml2_conf.sh;"


- name: Configure Neutron3
  shell: >
    mysql -e "drop database if exists neutron_ml2;";
    mysql -e "create database neutron_ml2 character set utf8;";
    mysql -e "grant all on neutron_ml2.* to 'neutron'@'%';";
    su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron;

- name: Restart neutron-server
  service: name=neutron-server state=started






